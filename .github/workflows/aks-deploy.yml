name: Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure CLI Login
      run: |
        echo "Logging into Azure using Service Principal..."
        az login --service-principal \
          --username ${{ secrets.AZURE_CLIENT_ID }} \
          --password ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}

        echo "Setting subscription..."
        az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        echo "Getting AKS credentials..."
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

        echo "Listing AKS nodes..."
        kubectl get nodes
    
    - name: Install Linkerd
      run: |
        echo "Installing Linkerd..."
        curl -sL https://run.linkerd.io/install | sh
        export PATH=$PATH:/home/$(whoami)/.linkerd2/bin

        echo "Validating Linkerd installation..."
        linkerd check --pre

        echo "Installing Linkerd CRDs..."
        linkerd install --crds | kubectl apply -f -

        echo "Installing Linkerd control plane..."
        linkerd install | kubectl apply -f -

        echo "Checking Linkerd installation..."
        linkerd check

        echo "Installing Linkerd Viz extension for monitoring..."
        linkerd viz install | kubectl apply -f -
        linkerd viz check

        echo "Injecting Linkerd into existing deployments..."
        kubectl get deploy -o yaml | linkerd inject - | kubectl apply -f -

    - name: Verify Linkerd installation
      run: |
        echo "Verifying Linkerd CRDs..."
        kubectl get crds | grep linkerd

        echo "Verifying Linkerd ConfigMaps..."
        kubectl get configmap -n linkerd

        echo "Verifying Linkerd pod status..."
        kubectl get pods

        echo "Verifying pods after Linkerd injection..."
        kubectl get pods -o wide

    - name: Install KEDA
      run: |
        echo "Adding KEDA Helm chart repository..."
        helm repo add kedacore https://kedacore.github.io/charts
        helm repo update

        echo "Installing KEDA..."
        helm install keda kedacore/keda --namespace keda --create-namespace

        echo "Adding Prometheus Helm chart repository..."
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update

        echo "Installing Prometheus..."
        helm install prometheus prometheus-community/prometheus --namespace monitoring --create-namespace

        echo "Applying KEDA CRDs..."
        kubectl apply --server-side -f https://github.com/kedacore/keda/releases/download/v2.16.0/keda-2.16.0-crds.yaml

        echo "Applying Kubernetes resources recursively..."
        kubectl apply -f k8s/ --recursive

    - name: Apply Kubernetes resources
      run: |
        kubectl apply -f k8s/ --recursive
