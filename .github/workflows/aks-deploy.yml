name: Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Azure CLI Login
      run: |
        echo "Logging into Azure using Service Principal..."
        az login --service-principal \
          --username ${{ secrets.AZURE_CLIENT_ID }} \
          --password ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}

        echo "Setting subscription..."
        az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        echo "Getting AKS credentials..."
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

        echo "Listing AKS nodes..."
        kubectl get nodes

    - name: Install KEDA
      run: |
        echo "Adding KEDA Helm repository..."
        helm repo add kedacore https://kedacore.github.io/charts
        helm repo update
        echo "Checking if KEDA is already installed..."

        # Desinstalar si ya está instalado
        if helm list --namespace keda | grep keda; then
          echo "KEDA is already installed. Upgrading instead..."
          helm upgrade keda kedacore/keda --namespace keda
        else
          echo "Installing KEDA..."
          helm install keda kedacore/keda --namespace keda --create-namespace
        fi

        echo "Adding Prometheus Helm repository..."
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        echo "Installing Prometheus..."
        helm install prometheus prometheus-community/prometheus --namespace monitoring --create-namespace

        echo "Applying KEDA CRDs..."
        kubectl apply --server-side -f https://github.com/kedacore/keda/releases/download/v2.16.0/keda-2.16.0-crds.yaml

        echo "Applying KEDA manifests recursively..."
        kubectl apply -f k8s/ --recursive

    - name: Install or Upgrade Linkerd
      run: |
        echo "1: Verificando si Linkerd ya está instalado en AKS..."
        
        # Instalar el CLI de Linkerd si aún no está instalado
        echo "2: Descargando e instalando el CLI de Linkerd..."
        curl -sL https://run.linkerd.io/install | sh  
        export PATH=$PATH:/home/$(whoami)/.linkerd2/bin

        # Verificar si Linkerd ya está instalado en el clúster
        echo "3: Verificando si Linkerd está instalado en el namespace..."
        if ! kubectl get namespace linkerd > /dev/null 2>&1; then
          echo "4: Linkerd no encontrado. Instalando..."

          # Instalar los CRDs de Linkerd
          echo "5: Instalando CRDs de Linkerd..."
          linkerd install --crds | kubectl apply -f -
          
          # Instalar el plano de control de Linkerd
          echo "6: Instalando el plano de control de Linkerd..."
          linkerd install | kubectl apply -f -

          # Instalar la extensión viz de Linkerd (opcional)
          echo "7: Instalando la extensión viz de Linkerd..."
          linkerd viz install | kubectl apply -f -
        else
          echo "8: Linkerd ya está instalado. Actualizando..."

          # Realizar la actualización de Linkerd si ya está presente
          echo "9: Actualizando Linkerd..."
          linkerd upgrade | kubectl apply -f -
        fi

        # Inyectar Linkerd en los despliegues existentes
        echo "10: Inyectando Linkerd en los despliegues existentes..."
        kubectl get deploy -o yaml | linkerd inject - | kubectl apply -f -
        echo "11: Finalizado el proceso de instalación o actualización de Linkerd."
